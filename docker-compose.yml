services:
  traefik:
    build: ./traefik
    image: clinic-hub-traefik:v0.1.0
    ports:
      - "80:80"
    restart: always
    networks:
      - web

  keycloak:
    build: ./keycloak
    image: clinic-hub-keycloak:v0.1.0
    env_file:
      - .env
    volumes:
      - clinic-hub-keycloak-data:/opt/keycloak/data
    depends_on:
      postgres:
        condition: service_started
    restart: always
    networks:
      - web

  postgres:
    build: ./postgres
    image: clinic-hub-postgres:v0.1.0
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - clinic-hub-postgres-db-data:/var/lib/postgresql/data
    restart: always
    networks:
      - web
  identity-service:
    build:
      context: ./services
      dockerfile: identity-service/Dockerfile
    image: clinic-hub-identity:v0.1.0
    env_file:
      - .env
    depends_on:
      keycloak:
        condition: service_started
    restart: always
    networks:
      - web

  pharmacy-service:
    build:
      context: ./services
      dockerfile: pharmacy-service/Dockerfile
    image: clinic-hub-pharmacy:v0.1.0
    env_file:
      - .env
    depends_on:
      keycloak:
        condition: service_started
    restart: always
    networks:
      - web

  krakend:
    build: ./krakend
    image: clinic-hub-krakend:v0.1.0
    restart: always
    env_file:
      - .env
    networks:
      - web

networks:
  web:
    driver: bridge

volumes:
  clinic-hub-postgres-db-data:
  clinic-hub-keycloak-data:
